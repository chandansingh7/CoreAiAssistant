plugins {
    id 'java'
    id 'application'
    id 'org.javamodularity.moduleplugin' version '1.8.12'
    id 'org.openjfx.javafxplugin' version '0.0.13'
    id 'org.beryx.jlink' version '2.25.0'
}

group 'com.corecrew'
version '1.0-SNAPSHOT'

repositories {
    mavenCentral()
    maven {
        url "https://oss.sonatype.org/content/repositories/snapshots"
        mavenContent {
            snapshotsOnly()
        }
    }
}

ext {
    junitVersion = '5.9.2'
}

sourceCompatibility = '17'
targetCompatibility = '17'

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

application {
    mainModule = 'com.corecrew.coreaiassistant'
    mainClass = 'com.corecrew.coreaiassistant.AssistantApplication'
    executableDir='build'
}

javafx {
    version = '17.0.15'
    modules = ['javafx.controls', 'javafx.fxml', 'javafx.web']
}

dependencies {

//    implementation 'edu.cmu.sphinx:sphinx4-core:5prealpha-SNAPSHOT'
    implementation 'org.json:json:20240303'
    implementation 'org.springframework.boot:spring-boot-starter-webflux:3.4.5'
    implementation 'org.fxmisc.richtext:richtextfx:0.10.9'
    implementation 'com.vladsch.flexmark:flexmark-all:0.64.0'
    implementation 'com.squareup.okhttp3:okhttp:4.12.0'
    testImplementation "org.junit.jupiter:junit-jupiter-api:${junitVersion}"
    testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:${junitVersion}"
}

test {
    useJUnitPlatform()
}

jlink {
    imageZip = project.file("${buildDir}/distributions/app-${javafx.platform.classifier}.zip")
    options = ['--strip-debug', '--compress', '2', '--no-header-files', '--no-man-pages']
    launcher {
        name = 'app'
    }
}

jlinkZip {
    group = 'distribution'
}

sourceSets {
    main {
        resources {
            srcDir 'src/main/resources'  // This ensures the resources folder is included in the build.
        }
    }
}

tasks.withType(ProcessResources) {
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE  // Skip duplicates
}